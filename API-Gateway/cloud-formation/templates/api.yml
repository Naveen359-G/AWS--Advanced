AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation sample template that contains a single Lambda function
  behind an API Gateway
Resources:
  GreetingLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile:
          'Fn::Join':
            - |+
            - - '''use strict'';'
              - ''
              - // Greeter Lambda
              - 'exports.handler = (event, context, callback) => {'
              - '  console.log(''Event:'', JSON.stringify(event));'
              - '  const name = event.name || ''World'';'
              - '  const response = {greeting: `Hello, ${name}!`};'
              - '  callback(null, response);'
              - '};'
      Description: A greeting function
      FunctionName: GreetingLambda
      Handler: index.handler
      Role:
        'Fn::GetAtt':
          - LambdaExecutionRole
          - Arn
      Runtime: nodejs4.3
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  GreetingApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: Greeting API
      Description: API used for Greeting requests
      FailOnWarnings: true
  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName:
        'Fn::GetAtt':
          - GreetingLambda
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: GreetingApi
            - /*
  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'
  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn:
        'Fn::GetAtt':
          - ApiGatewayCloudWatchLogsRole
          - Arn
  GreetingApiStage:
    DependsOn:
      - ApiGatewayAccount
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId:
        Ref: ApiDeployment
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId:
        Ref: GreetingApi
      StageName: LATEST
      Variables:
        Tom: Maslen-v4
  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - GreetingRequestGET
      - GreetingRequestPOST
    Properties:
      RestApiId:
        Ref: GreetingApi
      StageName: DummyStage
  GreetingResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: GreetingApi
      ParentId:
        'Fn::GetAtt':
          - GreetingApi
          - RootResourceId
      PathPart: greeting
  GreetingRequestGET:
    DependsOn: LambdaPermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'Fn::GetAtt':
                  - GreetingLambda
                  - Arn
              - /invocations
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: $input.json('$.body')
        RequestTemplates:
          application/json:
            'Fn::Join':
              - ''
              - - |
                  #set($allParams = $input.params())
                - |
                  {
                - |2
                    "body-json": "$input.json('$')",
                - |2
                    "params" : {
                - |2
                      #foreach($type in $allParams.keySet())
                - |2
                        #set($params = $allParams.get($type))
                - |2
                        "$type" : {
                - |2
                          #foreach($paramName in $params.keySet())
                - |2
                            "$paramName" : "$util.escapeJavaScript($params.get($paramName))"
                - |2
                            #if($foreach.hasNext),#end
                - |2
                          #end
                - |2
                        }
                - |2
                      #if($foreach.hasNext),#end
                - |2
                      #end
                - |2
                    },
                - |2
                    "stage-variables": {
                - |2
                      #foreach($key in $stageVariables.keySet())
                - |2
                        "$key" : "$util.escapeJavaScript($stageVariables.get($key))"
                - |2
                        #if($foreach.hasNext),#end
                - |2
                      #end
                - |2
                    },
                - |2
                    "context" : {
                - |2
                      "account-id" : "$context.identity.accountId",
                - |2
                      "api-id" : "$context.apiId",
                - |2
                      "api-key" : "$context.identity.apiKey",
                - |2
                      "authorizer-principal-id" : "$context.authorizer.principalId",
                - |2
                      "caller" : "$context.identity.caller",
                - |2
                      "cognito-authentication-provider" : "$context.identity.cognitoAuthenticationProvider",
                - |2
                      "cognito-authentication-type" : "$context.identity.cognitoAuthenticationType",
                - |2
                      "cognito-identity-id" : "$context.identity.cognitoIdentityId",
                - |2
                      "cognito-identity-pool-id" : "$context.identity.cognitoIdentityPoolId",
                - |2
                      "http-method" : "$context.httpMethod",
                - |2
                      "stage" : "$context.stage",
                - |2
                      "source-ip" : "$context.identity.sourceIp",
                - |2
                      "user" : "$context.identity.user",
                - |2
                      "user-agent" : "$context.identity.userAgent",
                - |2
                      "user-arn" : "$context.identity.userArn",
                - |2
                      "request-id" : "$context.requestId",
                - |2
                      "resource-id" : "$context.resourceId",
                - |2
                      "resource-path" : "$context.resourcePath"
                - |2
                    }
                - '}'
      RequestParameters:
        method.request.querystring.name: false
      ResourceId:
        Ref: GreetingResource
      RestApiId:
        Ref: GreetingApi
      MethodResponses:
        - StatusCode: 200
  GreetingRequestPOST:
    DependsOn: LambdaPermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Join':
            - ''
            - - 'arn:aws:apigateway:'
              - Ref: 'AWS::Region'
              - ':lambda:path/2015-03-31/functions/'
              - 'Fn::GetAtt':
                  - GreetingLambda
                  - Arn
              - /invocations
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: $input.json('$.body')
        RequestTemplates:
          application/json:
            'Fn::Join':
              - ''
              - - |
                  #set($allParams = $input.params())
                - |
                  {
                - |2
                    "body-json": "$input.json('$')",
                - |2
                    "params" : {
                - |2
                      #foreach($type in $allParams.keySet())
                - |2
                        #set($params = $allParams.get($type))
                - |2
                        "$type" : {
                - |2
                          #foreach($paramName in $params.keySet())
                - |2
                            "$paramName" : "$util.escapeJavaScript($params.get($paramName))"
                - |2
                            #if($foreach.hasNext),#end
                - |2
                          #end
                - |2
                        }
                - |2
                      #if($foreach.hasNext),#end
                - |2
                      #end
                - |2
                    },
                - |2
                    "stage-variables": {
                - |2
                      #foreach($key in $stageVariables.keySet())
                - |2
                        "$key" : "$util.escapeJavaScript($stageVariables.get($key))"
                - |2
                        #if($foreach.hasNext),#end
                - |2
                      #end
                - |2
                    },
                - |2
                    "context" : {
                - |2
                      "account-id" : "$context.identity.accountId",
                - |2
                      "api-id" : "$context.apiId",
                - |2
                      "api-key" : "$context.identity.apiKey",
                - |2
                      "authorizer-principal-id" : "$context.authorizer.principalId",
                - |2
                      "caller" : "$context.identity.caller",
                - |2
                      "cognito-authentication-provider" : "$context.identity.cognitoAuthenticationProvider",
                - |2
                      "cognito-authentication-type" : "$context.identity.cognitoAuthenticationType",
                - |2
                      "cognito-identity-id" : "$context.identity.cognitoIdentityId",
                - |2
                      "cognito-identity-pool-id" : "$context.identity.cognitoIdentityPoolId",
                - |2
                      "http-method" : "$context.httpMethod",
                - |2
                      "stage" : "$context.stage",
                - |2
                      "source-ip" : "$context.identity.sourceIp",
                - |2
                      "user" : "$context.identity.user",
                - |2
                      "user-agent" : "$context.identity.userAgent",
                - |2
                      "user-arn" : "$context.identity.userArn",
                - |2
                      "request-id" : "$context.requestId",
                - |2
                      "resource-id" : "$context.resourceId",
                - |2
                      "resource-path" : "$context.resourcePath"
                - |2
                    }
                - '}'
      RequestParameters:
        method.request.querystring.name: false
      ResourceId:
        Ref: GreetingResource
      RestApiId:
        Ref: GreetingApi
      MethodResponses:
        - StatusCode: 200
Outputs:
  RootUrl:
    Description: Root URL of the API gateway
    Value:
      'Fn::Join':
        - ''
        - - 'https://'
          - Ref: GreetingApi
          - .execute-api.
          - Ref: 'AWS::Region'
          - .amazonaws.com
